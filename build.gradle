

buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}

}
	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {


		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'javax.persistence:javax.persistence-api:2.2'
		implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
		implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
		implementation 'org.modelmapper:modelmapper:3.1.0'
		implementation 'com.querydsl:querydsl-jpa:5.0.0'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

		annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
	}

tasks.named('test') {
	useJUnitPlatform()
}

def generated = 'src/main/generated'
clean {
	delete file(generated)
}

tasks.withType(JavaCompile) {
	options.annotationProcessorPath = configurations.annotationProcessor
	options.compilerArgs += [
			"-Aquerydsl.entityAccessors=true",
			"-Aquerydsl.useFieldAccessors=true"
	]
}

sourceSets {
	main {
		java {
			srcDirs += [generated]
		}
	}
}

tasks.register('generateQueryDSL', JavaCompile) {
	source = sourceSets.main.java
	classpath = configurations.compileClasspath
	options.annotationProcessorPath = configurations.annotationProcessor
	destinationDir = file(generated)
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
}

compileJava.dependsOn generateQueryDSL